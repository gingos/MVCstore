
@{
    Layout = "~/Views/Shared/Products_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>showProducts</title>
</head>

<body>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <div> 
        <h3>Look at all these Products</h3><br />
    </div>
    <div align="center">
        <input id="getPC_bt" type="button" class="btn btn-primary" value="get PC" onclick="getJSON('getPCbyJSON', getPC)" />
        <input id="getPrinter_bt" type="button" class="btn btn-primary" value="get Printer" onclick="getJSON('getPrinterByJSON', getPrinter)" />
        <input id="getLaptop_bt" type="button" class="btn btn-primary" value="get Laptop" onclick="getJSON('getLaptopByJSON', getLaptop)" />
    </div>
    <div id="status"></div>
    <div >
        <table class="table table-striped" id="productsTable"></table>
    </div>
    
    <script lang="javascript">

        /* Choose what product's JSON to get
         (string) action  determines action name on ProductsController
         (function) getProduct determines retrival functions in javascript
         */
        function getJSON(action, getProduct) {
            $("#status").text("Loading Table...");
            $.get(action, null, getProduct);
        }

        // Code PC table in html : (JSON list) pcList retrieved from action "getPCbyJSON"
        function getPC(pcList) {
            $("#productsTable").find("tr").remove();
            var tbl = $("#productsTable");
            var header = "<tr>" +
                "<td>Model</td>" +
                "<td>Speed</td>" +
                "<td>RAM</td>" +
                "<td>HD</td>" +
                "<td>Price</td>" +
                "<td>Add?</td>" +
                "</tr>";
            tbl.append(header);
            for (k = 0; k < pcList.length; k++) {
                var row = "<tr id= 'pc_row_" + k +"'>" +
                    "<td>" + pcList[k].Model + "</td>" +
                    "<td>" + pcList[k].Speed + "</td>" +
                    "<td>" + pcList[k].RAM + "</td>" +
                    "<td>" + pcList[k].HD + "</td>" +
                    "<td>" + pcList[k].Price + "</td>" +
                    "<td><input type='text' id='pc_count_" + k + "' value='0'/></div></td>" +
                    "<td><input type='button' id='pc_bt_" + k + "' value='Add to Cart' onclick=\"purchaseProcess($(\'#pc_count_" + k + "\').val()," + pcList[k].Model + "," + pcList[k].Price + "," +"\'stock_txt_" +k + "\')\"></td>" +
                    //"<td><input type='button' id='pc_bt_" + k + "' value='Add to Cart' onclick=\"addToCart(\'pc_row_" + k + "\')\"></td>" +                                              `
                    "<td id='stock_txt_" + k + "'></td>" +
                    "</tr>"
                tbl.append(row);
            }

            $("#status").text("")
        }
        // Code Printer table in html : (JSON list) printerList retrieved from action "getPrinterbyJSON"
        // TODO: test functionality, copy past from pc
        function getPrinter(printerList) {
            $("#productsTable").find("tr").remove();
            var tbl = $("#productsTable");
            var header = "<tr>" +
                "<td>Model</td>" +
                "<td>Color</td>" +
                "<td>Type</td>" +
                "<td>Price</td>" +
                "<td>Add?</td>" +
                "</tr>";
            tbl.append(header);
            for (k = 0; k < printerList.length; k++) {
                var row = "<tr>" +
                    "<td>" + printerList[k].Model + "</td>" +
                    "<td>" + printerList[k].Color + "</td>" +
                    "<td>" + printerList[k].Type + "</td>" +
                    "<td>" + printerList[k].Price + "</td>" +
                    "<td><input type='text' id='printer_count_" + k + "' value='0'/></div></td>" +
                    "<td><input type='button' id='printer_bt_" + k + "' value='Add to Cart' onclick=\"purchaseProcess($(\'#printer_count_" + k + "\').val()," + printerList[k].Model + "," + printerList[k].Price + "," + "\'stock_txt_" + k + "\')\"></td>" +
                    "<td id='stock_txt_" + k + "'></td>" +
                    "</tr>"
                tbl.append(row);
            }

            $("#status").text("")

        }
        // Code laptop table in html : (JSON list) laptopList retrieved from action "getLaptopByJSON"
        // TODO: test functionality, copy past from pc
        function getLaptop(laptopList) {
            $("#productsTable").find("tr").remove();
            var tbl = $("#productsTable");
            var header = "<tr>" +
                "<td>Model</td>" +
                "<td>Speed</td>" +
                "<td>RAM</td>" +
                "<td>HD</td>" +
                "<td>Screen</td>" +
                "<td>Price</td>" +
                "<td>Add?</td>" +
                "</tr>";
            tbl.append(header);
            for (k = 0; k < laptopList.length; k++) {
                var row = "<tr>" +
                    "<td>" + laptopList[k].Model + "</td>" +
                    "<td>" + laptopList[k].Speed + "</td>" +
                    "<td>" + laptopList[k].RAM + "</td>" +
                    "<td>" + laptopList[k].HD + "</td>" +
                    "<td>" + laptopList[k].Screen + "</td>" +
                    "<td>" + laptopList[k].Price + "</td> "+
                    "<td><input type='text' id='laptop_count_" + k + "' value='0'/></div></td>" +
                    "<td><input type='button' id='laptop_bt_" + k + "' value='Add to Cart' onclick=\"purchaseProcess($(\'#laptop_count_" + k + "\').val()," + laptopList[k].Model + "," + laptopList[k].Price + "," + "\'stock_txt_" + k + "\')\"></td>" +
                    "<td id='stock_txt_" + k + "'></td>" +
                    "</tr>";

                tbl.append(row);
            }

            $("#status").text("")

        }
       
        //disable "show cart" button
        //subtract quantity from products (product dal)
        //add (available) to cart (order dal)
        //      -- add (return): notify quantity label
        //      -- enable "show cart" button
        function purchaseProcess(quantity, model, price, label) {
            if (quantity <= 0 || ! isInt(quantity)) {
                alert('please specify a positive numeirc quantity');
                return;
            }
            
            hideButtoWhilePurchase();
            // A-sync JSON query
            subtractFromStock(model, quantity, price, label);
            
        }
       
        // functions verifes if item is in stock
        // if yes, adds to cart and decreases product quantity
        // if partial or zero, returns available quantity
        function subtractFromStock(model, wantedQuantity, price, label) {
            //should probably move this one and move the purchase part to "show cart"
            //build a list of desired products, send them all to "show cart"
            //and apply this function on each item on the list
            var ok = document.getElementById(label);
            var url = '@Url.Action("checkStock", "Products")';
            var stockData = { quantityToBuy: wantedQuantity, model: model, price: price };
            ok.innerHTML = "checking if product is in stock... ";
            //send JSON to server
            $.get(url, stockData,
            //addedQuantityData: Order object
            function (orderData) {

                if (orderData.Quantity == wantedQuantity) {
                    alert('product successfully added to cart!');
                    ok.innerHTML = "";
                }
                else if (orderData.Quantity > 0 && orderData.Quantity < wantedQuantity) {
                    alert('stock was not enough, added to cart only ' + orderData.Quantity + ' items');
                    ok.innerHTML = "";
                }
                else if (orderData.Quantity == 0) {
                    alert('sorry, item was not in stock, try again soon');
                    ok.innerHTML = "";
                }

                showButtonAfterPruchase();
            }
            );
        }
        function hideButtoWhilePurchase() {     
                $("#toCart_bt").hide();
        }
        function showButtonAfterPruchase() {
            $("#toCart_bt").show();
        }
        function isInt(value) {
            if (isNaN(value)) {
                return false;
            }
            var x = parseFloat(value);
            return (x | 0) === x;
        }
        @*function addToCart(row_id) {
            alert(row_id);
            var row = document.getElementById(row_id).cells;
            //quantity not working
            var quantity = row[5].toString();
            var model = row[0].innerHTML;
            var price = row[4].innerHTML;
            if (quantity == 0) {
                alert('please specify quantity');
                return;
            }
            //TODO: add confirmation box
            //consider using button->"this" for addToCart
            alert('buy: ' + quantity + ' of model # ' + model + ' for ' + price + '$');
            if (isInStock(model, quantity)) {
                var url = '@Url.Action("addToCart", "Products")';
                var data = { quantity: quantity, model: model, price: price };
                $.post(url, data, null);
            }
        }*@
        
    </script>
</body>
</html>
