@model MVCstore.ModelView.RestockViewModel
@using MVCstore.Models

@{
    Layout = "~/Views/Shared/Stock_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>showRestockRequests</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>

    <div> 
        <h3>Please Confirm Order Of The Following Products</h3><br />
    </div>
    <div align="center">
        <table id="requestsTable">
            <tr id="header">
                <td>Request ID</td>
                <td>Model</td>
                <td>Quantity</td>
            </tr>
            @foreach ( StockRequest sr in Model.stockRequestList)
            {
                <tr>
                    <td>@sr.ReqID</td>
                    <td>@sr.Model</td>
                    <td>@sr.Quantity</td>
                </tr>
            }
        </table>
        <br />
        <button id="confirm_bt" class="btn btn-primary" onclick="confirmOrder()"> Confirm Requests!</button>
    </div>

    <script language="javascript">
        $(document).ready(function () {
            //keep only one document.ready if possible and wrap all the js code in that
            hideButtonIfEmpty();
            hideTableIfEmpty();
        });

        // only shows table if has unordered products
        function hideTableIfEmpty() {
            var x = document.getElementById("requestsTable").rows.length;
            if (x == 1) {
                $("#requestsTable").hide();
            } else {
                $("#requestsTable").show();
            }
        }

        // only shows "confirm" button if has unshipped requests
        function hideButtonIfEmpty() {
            var numRows = document.getElementById("requestsTable").rows.length;
            if (numRows == 1) {
                $("#confirm_bt").hide();
            } else {
                $("#confirm_bt").show();
            }
        }

        // begin request confirmation proccess: confirm quantity and add request dates
        function confirmOrder() {
            var r = confirm("Confirm Order Of Requested Products?");
            if (r == true) {
                sumHtmlTable();
                addShippedDate();
            }
        }

        // sum how many products will be shipped
        function sumHtmlTable() {
            var table = document.getElementById('requestsTable');
            var sum = 0;
            debugger;
            for (var r = 1, n = table.rows.length; r < n; r++) {
                var qua = parseInt(table.rows[r].cells[2].innerHTML);
                sum += qua;
            }
            alert('Ordering a total of ' + sum + ' Products' +'\n' + 'Receipt will be send via a stork');
        }

        // add today's date to STOCK-REQUESTS table, hence mark them as confirmed
        // perhaps possible with "submit", but i prefer the non-callback method
        function addShippedDate() {
            var url = '@Url.Action("restockProducts", "Stock")';
            $.post(url, null, refreshPage);
        }

        // once mark arrived, refresh page
        function refreshPage() {
            location.reload();
        }
    </script>
</body>
</html>
